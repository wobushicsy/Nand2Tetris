// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[9..11], a = DMux0, b = DMux1, c = DMux2,
        d = DMux3, e = DMux4, f = DMux5, g = DMux6, h = DMux7);
    RAM512(in = in, load = DMux0, address = address[0..8], out = Out0);
    RAM512(in = in, load = DMux1, address = address[0..8], out = Out1);
    RAM512(in = in, load = DMux2, address = address[0..8], out = Out2);
    RAM512(in = in, load = DMux3, address = address[0..8], out = Out3);
    RAM512(in = in, load = DMux4, address = address[0..8], out = Out4);
    RAM512(in = in, load = DMux5, address = address[0..8], out = Out5);
    RAM512(in = in, load = DMux6, address = address[0..8], out = Out6);
    RAM512(in = in, load = DMux7, address = address[0..8], out = Out7);
    Mux8Way16(a = Out0, b = Out1, c = Out2, d = Out3, e = Out4, f = Out5,
        g = Out6, h = Out7, sel = address[9..11], out = out);
}